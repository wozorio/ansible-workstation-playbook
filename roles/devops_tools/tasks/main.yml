---
- name: Install Python packages
  ansible.builtin.pip:
    name: "{{ item }}"
  loop: "{{ devops_tools_python_packages }}"

- name: Gather Python version
  ansible.builtin.setup:
    filter:
      - ansible_python_version
  register: python_version

- name: Extract Python major and minor version
  ansible.builtin.set_fact:
    python_version_short: "{{ python_version | regex_search('([0-9]+\\.[0-9]+)') }}"

- name: Install Python-venv
  ansible.builtin.apt:
    name: python{{ python_version_short }}-venv

- name: Configure Poetry to create virtual environments in the project root
  ansible.builtin.command: |
    poetry config virtualenvs.in-project true
  become: false
  become_user: "{{ user }}"
  register: poetry_result
  changed_when: poetry_result.rc != 0

- name: Add HashiCorp repository
  ansible.builtin.deb822_repository:
    name: hashicorp-archive
    state: present
    suites: ["{{ distrib_codename }}"]
    uris: ["https://apt.releases.hashicorp.com"]
    components: [main]
    signed_by: https://apt.releases.hashicorp.com/gpg
    enabled: true
  notify:
    - Update apt cache

- name: Ensure handlers are notified now
  ansible.builtin.meta: flush_handlers

- name: Install Terraform
  ansible.builtin.apt:
    name: terraform
    state: present

- name: Download Pulumi install script
  ansible.builtin.get_url:
    url: https://get.pulumi.com
    dest: "{{ download_dir }}/pulumi_install.sh"
    mode: "0755"

- name: Install Pulumi
  ansible.builtin.shell: |
    . {{ download_dir }}/pulumi_install.sh
  become: false
  become_user: "{{ user }}"
  register: pulumi_output
  changed_when: "'Pulumi is now installed' not in pulumi_output.stdout"

- name: Install hadolint
  ansible.builtin.get_url:
    url: "https://github.com/hadolint/hadolint/releases/download/v{{ devops_tools_versions.hadolint }}-beta/hadolint-Linux-x86_64"
    dest: "{{ bin_path }}/hadolint"
    mode: "0775"

- name: Install kubectl
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ devops_tools_versions.kubectl }}/bin/linux/amd64/kubectl"
    dest: "{{ bin_path }}"
    mode: "0775"

- name: Install kubectx
  ansible.builtin.get_url:
    url: "https://github.com/ahmetb/kubectx/releases/download/v{{ devops_tools_versions.kubectx }}/kubectx"
    dest: "{{ bin_path }}"
    mode: "0775"

- name: Install kubens
  ansible.builtin.get_url:
    url: "https://github.com/ahmetb/kubectx/releases/download/v{{ devops_tools_versions.kubens }}/kubens"
    dest: "{{ bin_path }}"
    mode: "0775"

- name: Download Helm
  ansible.builtin.get_url:
    url: "https://get.helm.sh/helm-v{{ devops_tools_versions.helm }}-linux-amd64.tar.gz"
    dest: "{{ download_dir }}/helm-v{{ devops_tools_versions.helm }}-linux-amd64.tar.gz"
    mode: "0775"
  notify:
    - Extract Helm binary
    - Copy Helm binary to its path

- name: Download Stern
  ansible.builtin.get_url:
    url: "https://github.com/stern/stern/releases/download/v{{ devops_tools_versions.stern }}/stern_{{ devops_tools_versions.stern }}_linux_amd64.tar.gz"
    dest: "{{ download_dir }}/stern_{{ devops_tools_versions.stern }}_linux_amd64.tar.gz"
    mode: "0775"
  notify:
    - Extract Stern binary
    - Copy Stern binary to its path

- name: Download terraform-docs
  ansible.builtin.get_url:
    url: "https://github.com/terraform-docs/terraform-docs/releases/download/v{{ devops_tools_versions.terraform_docs }}/terraform-docs-v{{ devops_tools_versions.terraform_docs }}-linux-amd64.tar.gz"
    dest: "{{ download_dir }}/terraform-docs-v{{ devops_tools_versions.terraform_docs }}-linux-amd64.tar.gz"
    mode: "0775"
  notify:
    - Extract terraform-docs binary
    - Copy terraform-docs binary to its path
