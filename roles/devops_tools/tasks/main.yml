---
- name: Install Python packages
  ansible.builtin.pip:
    name: "{{ item }}"
  loop: "{{ devops_tools_python.packages }}"

- name: Gather Python version
  ansible.builtin.setup:
    filter:
      - ansible_python_version
  register: python_version

- name: Extract Python major and minor version
  ansible.builtin.set_fact:
    python_version_short: "{{ python_version | regex_search('([0-9]+\\.[0-9]+)') }}"

- name: Install Python-venv
  ansible.builtin.apt:
    name: python{{ python_version_short }}-venv

- name: Download Helm
  ansible.builtin.get_url:
    url: "https://get.helm.sh/helm-v{{ devops_tools_versions.helm }}-linux-amd64.tar.gz"
    dest: "{{ download_dir }}/helm-v{{ devops_tools_versions.helm }}-linux-amd64.tar.gz"
    mode: "0775"
  notify:
    - Extract Helm binary
    - Copy Helm binary to its path

- name: Download kubectl
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ devops_tools_versions.kubectl }}/bin/linux/amd64/kubectl"
    dest: "{{ download_dir }}/kubectl"
    mode: "0775"

- name: Copy kubectl binary to its path
  ansible.builtin.copy:
    src: "{{ download_dir }}/kubectl"
    dest: "{{ bin_path }}"
    remote_src: true
    mode: "0775"

- name: Download kubectx
  ansible.builtin.get_url:
    url: "https://github.com/ahmetb/kubectx/releases/download/v{{ devops_tools_versions.kubectx }}/kubectx"
    dest: "{{ download_dir }}/kubectx"
    mode: "0775"

- name: Copy kubectx binary to its path
  ansible.builtin.copy:
    src: "{{ download_dir }}/kubectx"
    dest: "{{ bin_path }}"
    remote_src: true
    mode: "0775"

- name: Download kubens
  ansible.builtin.get_url:
    url: "https://github.com/ahmetb/kubectx/releases/download/v{{ devops_tools_versions.kubens }}/kubens"
    dest: "{{ download_dir }}/kubens"
    mode: "0775"

- name: Copy kubens binary to its path
  ansible.builtin.copy:
    src: "{{ download_dir }}/kubens"
    dest: "{{ bin_path }}"
    remote_src: true
    mode: "0775"

- name: Download Stern
  ansible.builtin.get_url:
    url: "https://github.com/stern/stern/releases/download/v{{ devops_tools_versions.stern }}/stern_{{ devops_tools_versions.stern }}_linux_amd64.tar.gz"
    dest: "{{ download_dir }}/stern_{{ devops_tools_versions.stern }}_linux_amd64.tar.gz"
    mode: "0775"
  notify:
    - Extract Stern binary
    - Copy Stern binary to its path

- name: Download Pulumi install script
  ansible.builtin.get_url:
    url: https://get.pulumi.com
    dest: "{{ download_dir }}/pulumi_install.sh"
    mode: "0755"

- name: Install Pulumi
  ansible.builtin.shell: |
    . {{ download_dir }}/pulumi_install.sh
  become: false
  become_user: "{{ user }}"
  register: pulumi_output
  changed_when: "'Pulumi is now installed' not in pulumi_output.stdout"

- name: Download Terraform
  ansible.builtin.get_url:
    url: "https://releases.hashicorp.com/terraform/{{ devops_tools_versions.terraform }}/terraform_{{ devops_tools_versions.terraform }}_linux_amd64.zip"
    dest: "{{ download_dir }}/terraform_{{ devops_tools_versions.terraform }}_linux_amd64.zip"
    mode: "0775"
  notify:
    - Extract Terraform binary
    - Copy Terraform binary to its path

- name: Download terraform-docs
  ansible.builtin.get_url:
    url: "https://github.com/terraform-docs/terraform-docs/releases/download/v{{ devops_tools_versions.terraform_docs }}/terraform-docs-v{{ devops_tools_versions.terraform_docs }}-linux-amd64.tar.gz"
    dest: "{{ download_dir }}/terraform-docs-v{{ devops_tools_versions.terraform_docs }}-linux-amd64.tar.gz"
    mode: "0775"
  notify:
    - Extract terraform-docs binary
    - Copy terraform-docs binary to its path
