---
- block:
    - name: Install azure-cli dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: latest
      loop:
        - ca-certificates
        - curl
        - apt-transport-https
        - lsb-release
        - gnupg

    - name: Add Microsoft GPG key to apt
      ansible.builtin.get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc
        dest: /etc/apt/trusted.gpg.d/microsoft.asc
        mode: 0644
        force: true

    - name: Add azure-cli repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli {{ distrib_codename }} main
        state: present

    - name: Install azure-cli
      ansible.builtin.apt:
        name: azure-cli
        state: latest

    - name: Download Helm
      ansible.builtin.shell: |
        wget -q -o /dev/null -P "{{ download_dir }}" "https://get.helm.sh/helm-v{{ devops_tools.versions.helm }}-linux-amd64.tar.gz"
        tar -xvzf "{{ download_dir }}/helm-v{{ devops_tools.versions.helm }}-linux-amd64.tar.gz" --directory "{{ download_dir }}"
      register: helm_download

    - name: Copy Helm binary to its path
      ansible.builtin.copy:
        src: "{{ download_dir }}/linux-amd64/helm"
        dest: "{{ bin_path }}"
        remote_src: true
        mode: 0775
      when: helm_download is changed

    - name: Download kubectl
      ansible.builtin.get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/v{{ devops_tools.versions.kubectl }}/bin/linux/amd64/kubectl"
        dest: "{{ download_dir }}/kubectl"

    - name: Copy kubectl binary to its path
      ansible.builtin.copy:
        src: "{{ download_dir }}/kubectl"
        dest: "{{ bin_path }}"
        remote_src: true
        mode: 0775

    - name: Download kubectx
      ansible.builtin.get_url:
        url: "https://github.com/ahmetb/kubectx/releases/download/v{{ devops_tools.versions.kubectx }}/kubectx"
        dest: "{{ download_dir }}/kubectx"

    - name: Copy kubectx binary to its path
      ansible.builtin.copy:
        src: "{{ download_dir }}/kubectx"
        dest: "{{ bin_path }}"
        remote_src: true
        mode: 0775

    - name: Download kubens
      ansible.builtin.get_url:
        url: "https://github.com/ahmetb/kubectx/releases/download/v{{ devops_tools.versions.kubens }}/kubens"
        dest: "{{ download_dir }}/kubens"

    - name: Copy kubens binary to its path
      ansible.builtin.copy:
        src: "{{ download_dir }}/kubens"
        dest: "{{ bin_path }}"
        remote_src: true
        mode: 0775

    - name: Download Stern
      ansible.builtin.shell: |
        wget -q -o /dev/null -P "{{ download_dir }}" "https://github.com/stern/stern/releases/download/v{{ devops_tools.versions.stern }}/stern_{{ devops_tools.versions.stern }}_linux_amd64.tar.gz"
        tar -xvzf "{{ download_dir }}/stern_{{ devops_tools.versions.stern }}_linux_amd64.tar.gz" --directory "{{ download_dir }}"
      register: stern_download

    - name: Copy Stern binary to its path
      ansible.builtin.copy:
        src: "{{ download_dir }}/stern"
        dest: "{{ bin_path }}"
        remote_src: true
        mode: 0775
      when: stern_download is changed

    - name: Download terraform-docs
      ansible.builtin.shell: |
        wget -q -o /dev/null -P "{{ download_dir }}" "https://github.com/terraform-docs/terraform-docs/releases/download/v{{ devops_tools.versions.terraform_docs }}/terraform-docs-v{{ devops_tools.versions.terraform_docs }}-linux-amd64.tar.gz"
        tar -xvzf "{{ download_dir }}/terraform-docs-v{{ devops_tools.versions.terraform_docs }}-linux-amd64.tar.gz" --directory "{{ download_dir }}"
      register: terraform_docs_download

    - name: Copy terraform-docs binary to its path
      ansible.builtin.copy:
        src: "{{ download_dir }}/terraform-docs"
        dest: "{{ bin_path }}"
        remote_src: true
        mode: 0775
      when: terraform_docs_download is changed

    - name: Download Terraform
      ansible.builtin.shell: |
        wget -q -o /dev/null -P "{{ download_dir }}" "https://releases.hashicorp.com/terraform/{{ devops_tools.versions.terraform }}/terraform_{{ devops_tools.versions.terraform }}_linux_amd64.zip"
        unzip -o "{{ download_dir }}/terraform_{{ devops_tools.versions.terraform }}_linux_amd64.zip" -d "{{ download_dir }}"
      register: terraform_download

    - name: Copy Terraform binary to its path
      ansible.builtin.copy:
        src: "{{ download_dir }}/terraform"
        dest: "{{ bin_path }}"
        remote_src: true
        mode: 0775
      when: terraform_download is changed
  when: devops_tools.install | bool
